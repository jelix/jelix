<?php
/**
 * @author     Laurent Jouanneau
 * @copyright  2005-2014 Laurent Jouanneau
 *
 * @see       http://www.jelix.org
 * @licence    GNU Lesser General Public Licence see LICENCE file or http://www.gnu.org/licenses/lgpl.html
 */

namespace Jelix\Core\Includer;

/**
 * interface for Includer compiler which needs many source files
 * The PHP file generated by the compiler should check itself
 * if it is still valid. The file should have a "return" statement
 * with a boolean : true if it is ok, false if it should be recompiled.
 */
interface MultiFileCompilerInterface
{
    /**
     * parse one of needed file.
     *
     * @param string $sourceFile the file selector
     * @param string $module     the module name of the file
     *
     * @return bool true : process ok
     */
    public function compileItem($sourceFile, $module);

    /**
     * save the results in a temporary file
     * called at the end of the compilation.
     *
     * @param string $cachefile the name of cache file
     */
    public function endCompile($cachefile);
}
